generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model action {
  id          String        @id @unique(map: "action_id_UNIQUE") @db.VarChar(38)
  type        String        @unique(map: "action_type_UNIQUE") @db.VarChar(64)
  transaction transaction[]
}

model asset {
  id                  String        @id @unique(map: "id_UNIQUE") @db.VarChar(38)
  asset_number        String        @unique(map: "asset_number_UNIQUE") @db.VarChar(45)
  model_id            String?       @db.VarChar(38)
  serial_number       String        @unique(map: "serial_number_UNIQUE") @db.VarChar(64)
  assigned_to_user_id String?       @db.VarChar(38)
  status_id           String?       @db.VarChar(38)
  location_id         String?       @db.VarChar(38)
  user                user?         @relation(fields: [assigned_to_user_id], references: [id], map: "fk_user_id")
  location            location?     @relation(fields: [location_id], references: [id], map: "fk_location_id_asset")
  model               model?        @relation(fields: [model_id], references: [id], map: "fk_model_id")
  status              status?       @relation(fields: [status_id], references: [id], map: "fk_status_id_asset")
  transaction         transaction[]

  @@index([model_id], map: "fk_model_id")
  @@index([assigned_to_user_id], map: "fk_assigned_to_user_id")
  @@index([status_id], map: "fk_status_id_asset")
  @@index([location_id], map: "fk_location_id_asset")
}

model manufacturer {
  id    String  @id @unique(map: "manfacturer_id_UNIQUE") @db.VarChar(38)
  name  String  @unique(map: "name_UNIQUE") @db.VarChar(64)
  model model[]
}

model model {
  id              String        @id @unique(map: "model_id_UNIQUE") @db.VarChar(38)
  name            String        @db.VarChar(64)
  manufacturer_id String?       @db.VarChar(38)
  asset           asset[]
  manufacturer    manufacturer? @relation(fields: [manufacturer_id], references: [id], map: "fk_manfacturer_id")

  @@unique([name, manufacturer_id], map: "uni_mname_and_manu")
  @@index([manufacturer_id], map: "fk_manfacturer_id_idx")
}

model transaction {
  id                                    String    @id @unique(map: "transaction_id_UNIQUE") @db.VarChar(38)
  date                                  DateTime  @db.DateTime(0)
  asset_id                              String?   @db.VarChar(38)
  action_id                             String?   @db.VarChar(38)
  action_user_id                        String?   @db.VarChar(38)
  asset_user_id                         String?   @db.VarChar(38)
  location_id                           String?   @db.VarChar(38)
  action                                action?   @relation(fields: [action_id], references: [id], map: "fk_action_id")
  user_transaction_action_user_idTouser user?     @relation("transaction_action_user_idTouser", fields: [action_user_id], references: [id], map: "fk_action_user_id")
  asset                                 asset?    @relation(fields: [asset_id], references: [id], map: "fk_asset_id")
  user_transaction_asset_user_idTouser  user?     @relation("transaction_asset_user_idTouser", fields: [asset_user_id], references: [id], map: "fk_asset_user_id")
  location                              location? @relation(fields: [location_id], references: [id], map: "fk_location_id_transaction")

  @@index([action_id], map: "fk_action_id_idx")
  @@index([action_user_id], map: "fk_action_user_id_idx")
  @@index([asset_id], map: "fk_asset_id_idx")
  @@index([asset_user_id], map: "fk_asset_user_id_idx")
  @@index([location_id], map: "fk_location_id_transaction")
}

model user {
  id                                           String        @id @unique(map: "id_UNIQUE") @db.VarChar(38)
  fn                                           String        @db.VarChar(45)
  ln                                           String        @db.VarChar(45)
  full_name                                    String        @db.VarChar(255)
  email                                        String        @unique(map: "email_UNIQUE") @db.VarChar(45)
  authorized_bitch_user                        Int           @default(0) @db.TinyInt
  role_id                                      String?       @db.VarChar(45)
  asset                                        asset[]
  transaction_transaction_action_user_idTouser transaction[] @relation("transaction_action_user_idTouser")
  transaction_transaction_asset_user_idTouser  transaction[] @relation("transaction_asset_user_idTouser")
  role                                         role?         @relation(fields: [role_id], references: [id], onDelete: NoAction, map: "fk_role_id_user")

  @@index([role_id], map: "fk_role_id_user")
}

model status {
  id    String  @id @db.VarChar(38)
  name  String  @db.VarChar(255)
  asset asset[]
}

model location {
  id          String        @id @unique(map: "id_UNIQUE") @db.VarChar(38)
  name        String        @unique(map: "name_UNIQUE") @db.VarChar(255)
  asset       asset[]
  transaction transaction[]
}

model role {
  id   String @id @unique(map: "id_UNIQUE") @db.VarChar(38)
  name String @unique(map: "name_UNIQUE") @db.VarChar(45)
  user user[]
}
